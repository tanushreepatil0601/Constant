 // write a program to create linked list 
package DSA;

class Node{
    int data;
    Node next;

    Node(int data){
    this.data=data;
    next=null;
    }
}
public class LinkedList {
    Node head;
    LinkedList() {
        head = null;
    }
    void insertAtTheEnd(int data) {
        Node newNode = new Node(data);
        if (head == null) {
            head = newNode;
            return;
        }
        Node last = head;
        while (last.next!=null) {
            last = last.next;
            // to increment we use i++ but in linked list we use "last=last.next"
        }
        last.next = newNode;

    }
    void printData() {
            Node last = head;
        while (last != null) {
            System.out.println(last.data);
            last = last.next;
        }
    }
    public static void main(String[] args) {
        LinkedList lj = new LinkedList();
        lj.insertAtTheEnd(10);
        lj.insertAtTheEnd(20);
        lj.insertAtTheEnd(30);
        lj.insertAtTheEnd(40);
        lj.insertAtTheEnd(50);
        lj.printData();
    }
}

// program to insert delet find length

class Node1{
    int data;
    Node1 next;
    Node1(int data){
        this.data=data;
        next=null;
    }
}
public class FrontNode {

    Node1 head;
    FrontNode(){
        head=null;
    }
    void insertAtBeg(int data){
        Node1 newNode = new Node1(data);
        newNode.next=head;
        head=newNode;
    }
    void insertAtEnd(int data){
        Node1 newNode=new Node1(data);
        if(head==null){
            head=newNode;
            return;
        }
        Node1 last=head;
        while(last.next!=null){
            last=last.next;
        }
        last.next=newNode;
    }
    void insAtAnyPoint(Node1 pre, int data){
        if(pre.next==null){
            return;
        }
        Node1 newNode = new Node1(data);
        newNode.next=pre.next;
        pre.next=newNode;
    }

    int Len(){
        Node1 last=head;
        int count=0;
        while(last!=null){
            count++;
            last=last.next;
        }
            return count;
    }
    void printData(){
        Node1 last=head;
        while(last!=null){
            System.out.println(last.data);
            last=last.next;
        }
    }
    public static void main(String[] args) {
        FrontNode lj = new FrontNode();
        lj.insertAtEnd(45);
        lj.insertAtEnd(55);
        lj.insertAtEnd(65);
        lj.insertAtBeg(2);
        Node1 nodeCenter=lj.head.next.next;
        lj.insAtAnyPoint(nodeCenter, 90);
        int length=lj.Len();
        System.out.println("length of linked list"+length);
        lj.printData();
    }
}
